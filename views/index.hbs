<!--
 Mbed Cloud Quickstart
 Copyright ARM Limited 2017

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<!DOCTYPE html>
<html>
<head>
    <title>Mbed Cloud Quickstart</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.min.css">
    <link rel="stylesheet" type="text/css" href="/css/custom.css">
    <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Open+Sans" />
</head>
<body class="arm-white">

    <div class="container">

        <div class="row title">
            <div class="ten columns">
                <h3>Mbed Cloud Quickstart</h3>
            </div>
        </div>

        <table class="u-full-width" id="connect">

        </table>

        <div class="six columns">
            <h5>API Key</h5>
            <label for="apikey">API Key
            <input type="text" placeholder="Add your key" id="apikey" class="u-full-width"></label>
            <button id="updateAPIKey" onclick="updateAPIKey(this)">Update</button>
        </div>

    </div>

<script src="js/connect.min.js"></script>
<script>

var accessKey = "default";

// Paths to resources on the devices
var blinkResourceURI = '/3201/0/5850';
var blinkPatternResourceURI = '/3201/0/5853';
var buttonResourceURI = '/3200/0/5501';



var connectOptions = {
    apiKey: accessKey
};

// Instantiate an mbed Cloud device API object
var connectApi = new MbedCloudSDK.ConnectApi(connectOptions);

function generateHomePage() {
    var table = document.getElementById("connect");
    table.innerHTML = "";

    connectApi.listConnectedDevices({ filter: { deviceType: "default" } } )
        .then(function(devices) {
            devices.data.forEach(function(device) {
                var row = table.insertRow(0);
                var cell = row.insertCell(0);
                var template = `
                    <tr><td>

                    <h4 id="header">${device.id}</h4>

                    <div class="row" id=${device.id}>

                        <div class="six columns">
                            <h5>Presses: <span id="${device.id}-presses">Unknown</span></h5>
                            <label for="${device.id}-subscribePresses">Subscribe
                            <input type="checkbox" id="${device.id}-subscribePresses" onclick="subscribePresses(this)"></label>
                            <button id="${device.id}-getPresses" onclick="getPresses(this)">Get presses (GET)</button>
                        </div>

                        <div class="six columns">
                            <h5>LED blink pattern</h5>
                            <label for="${device.id}-blinkPattern">Pattern
                            <input type="text" placeholder="500:500:500:500" id="${device.id}-blinkPattern" class="u-full-width"></label>
                            <button id="${device.id}-updatePattern" onclick="updateBlinkPattern(this)">Update (PUT)</button>
                            <button id="${device.id}-blink" class="arm-orange" onclick="blink(this)">Blink (POST)</button>
                        </div>

                    </div>

                </td></tr>
                `;
                cell.innerHTML = template;
            })
        });
}

function getPresses(element) {
    var deviceId = element.parentElement.parentElement.id;

    // Read data from GET resource /3200/0/5501 (num button presses)
    connectApi.getResourceValue(deviceId, buttonResourceURI, function(error, value) {
        if (error) throw error;
        document.getElementById(deviceId + "-presses").innerHTML = value;
    });
}

function subscribePresses(element) {
    var deviceId = element.parentElement.parentElement.parentElement.id;

    if (element.checked) {

        // Subscribe to all changes of resource /3200/0/5501 (button presses)
        connectApi.addResourceSubscription(deviceId, buttonResourceURI, function(data) {
            document.getElementById(deviceId + "-presses").innerHTML = data;
        }, function(error) {
            if (error) throw error;
        });

    } else {

        // Unsubscribe from the resource /3200/0/5501 (button presses)
        connectApi.deleteResourceSubscription(deviceId, buttonResourceURI, function(error) {
        });

    }

}

function updateBlinkPattern(element) {
    var deviceID = element.parentElement.parentElement.id;
    var blinkPattern = document.getElementById(deviceID + "-blinkPattern").value;
    // Set data on PUT resource /3201/0/5853 (pattern of LED blink)
    connectApi.setResourceValue(deviceID, blinkPatternResourceURI, blinkPattern, function(error) {
        if (error) throw error;
    });
}

function blink(element) {
    var deviceID = element.parentElement.parentElement.id;
    // POST to resource /3201/0/5850 (start blinking LED)
    connectApi.executeResource(deviceID, blinkResourceURI, function(error) {
        if (error) throw error;
    });
}

function updateAPIKey(element) {

    accessKey = document.getElementById("apikey").value;

    var host = window.location.hostname; 
    console.log('Host name is '+host+' , if this is incorrect, please change the connectOptions in the index.hbs file');

    connectOptions = {
        apiKey: accessKey,
        host: '/proxy'
    }
    
    connectApi.stopNotifications();
    // Instantiate an mbed Cloud device API object
    connectApi = new MbedCloudSDK.ConnectApi(connectOptions);
    
    connectApi.startNotifications(function(error) {
        if (error) throw error;
        console.log('Updated API Key');
        generateHomePage();
    });

}

</script>
</body>
</html>
